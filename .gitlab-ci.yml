before_script:
  - export APP_MIGRATION_LOOKUP=@root/tests/codeception/_migrations
  - export COMPOSE_PROJECT_NAME=buildref${CI_BUILD_REF}
  - export TEST_IMAGE_PREFIX=buildref${CI_BUILD_REF}
  - export COMPOSE_HTTP_TIMEOUT=120
  - export HOST_APP_VOLUME=$CI_PROJECT_DIR
  - export IMAGE_NAME=phundament/app
  - mkdir -p tmp

stages:
  - build
  - test
  - report
  - cleanup
  - deploy

build:
  stage: build
  script:
      - bash build/scripts/build.sh

test:
  stage: test
  script:
      - export COMPOSE_PROJECT_NAME=buildref${CI_BUILD_REF}${CI_BUILD_NAME}
      - bash build/scripts/test.sh; cp -r tests/codeception/_output/ /tmp/reports-${CI_BUILD_REF}

test-allow_fail:
  stage: test
  script:
      - export COMPOSE_PROJECT_NAME=buildref${CI_BUILD_REF}${CI_BUILD_NAME}
      - bash build/scripts/test-allow_fail.sh; cp -r tests/codeception/_output/ /tmp/reports-allow_fail-${CI_BUILD_REF}
  allow_failure: true

system:
  stage: test
  script:
      - bash build/scripts/system.sh
  allow_failure: true

report:
  stage: report
  script:
    - ls -la tmp
  artifacts:
    paths:
      - /tmp/reports-${CI_BUILD_REF}
      - /tmp/reports-allow_fail-${CI_BUILD_REF}
  when: always

cleanup:
  stage: cleanup
  script:
    - make TEST clean
    - make TEST clean COMPOSE_PROJECT_NAME=buildref${CI_BUILD_REF}test
    - make TEST clean COMPOSE_PROJECT_NAME=buildref${CI_BUILD_REF}test-allow_fail
  when: always

deploy:
  stage: deploy
  script:
      - bash build/scripts/deploy.sh
  only:
      - master
